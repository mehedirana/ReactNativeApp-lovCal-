{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\l\\\\a\\\\calculator\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Appbar, Button } from 'react-native-paper';\nimport DisplayLove from \"./components/DisplayLove\";\nvar instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android: 'Double tap R on your keyboard to reload,\\n' + 'Shake or press menu button for dev menu'\n});\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"state\",\n    value: function state() {\n      fname: '';\n\n      sname: '';\n\n      result: \"loading\";\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this = this;\n\n      fetch(\"https://love-calculator.p.rapidapi.com/getPercentage?fname=\" + this.state.fname + \"&sname=\" + this.state.sname, {\n        \"headers\": {\n          \"x-rapidapi-host\": \"love-calculator.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"1cfc3d9cccmsh24237f3d43d59eep103a7bjsn11b10383e1b7\"\n        }\n      }).then(function (data) {\n        return data.json();\n      }).then(function (data2) {\n        console.log(data2);\n\n        _this.setState({\n          result: data2\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Appbar.Header, {\n        style: {\n          backgroundColor: '#6131ff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(Appbar.Content, {\n        style: {\n          alignItems: 'center'\n        },\n        title: \"Love % Calculator\",\n        subtitle: \"Calculate your love %\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      })), React.createElement(TextInput, {\n        style: {\n          backgroundColor: '#fff'\n        },\n        label: \"Person 1(Male)\",\n        value: this.state.fname,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fname: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          backgroundColor: '#fff'\n        },\n        label: \"Person 2(Female)\",\n        value: this.state.sname,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            sname: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        icon: \"mood\",\n        mode: \"contained\",\n        style: {\n          margin: 20,\n          justifyContent: 'center',\n          backgroundColor: '#6131ff'\n        },\n        onPress: this.getData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"Calculate\"), React.createElement(DisplayLove, {\n        data: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["D:/l/a/calculator/App.js"],"names":["React","Component","TextInput","Appbar","Button","DisplayLove","instructions","Platform","select","ios","android","App","fname","sname","result","fetch","state","then","data","json","data2","console","log","setState","styles","container","backgroundColor","alignItems","text","margin","justifyContent","getData","bind","StyleSheet","create","flex","welcome","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nimport { TextInput, Appbar, Button } from 'react-native-paper';\nimport DisplayLove from './components/DisplayLove';\n\nconst instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android: 'Double tap R on your keyboard to reload,\\n' + 'Shake or press menu button for dev menu',\n});\n\nclass App extends Component {\n  state() {\n    fname: ''\n    sname: ''\n    result: \"loading\"\n  }\n  getData() {\n    fetch(`https://love-calculator.p.rapidapi.com/getPercentage?fname=${this.state.fname}&sname=${this.state.sname}`,\n      {\n        // \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"love-calculator.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"1cfc3d9cccmsh24237f3d43d59eep103a7bjsn11b10383e1b7\"\n        }\n      }\n\n    )\n      .then(data => data.json())\n      .then(data2 => {\n        console.log(data2)\n        this.setState({result: data2})\n      }\n    )\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <Appbar.Header style ={{backgroundColor:'#6131ff'}} >\n\n          <Appbar.Content\n            style={{ alignItems: 'center' }}\n            title=\"Love % Calculator\"\n            subtitle=\"Calculate your love %\"\n          />\n\n        </Appbar.Header>\n        <TextInput\n          style ={{backgroundColor:'#fff'}}\n          label=\"Person 1(Male)\"\n          value={this.state.fname}\n          onChangeText={text => this.setState({fname: text})}\n\n        />\n        <TextInput\n        style ={{backgroundColor:'#fff'}}\n          label='Person 2(Female)'\n          value={this.state.sname}\n          onChangeText={text => this.setState({sname: text})}\n\n        />\n        <Button\n          icon=\"mood\"\n          mode=\"contained\"\n          style={{ margin: 20, justifyContent:'center',backgroundColor:'#6131ff'}}\n          onPress={this.getData.bind(this)}\n          >\n          Calculate\n       </Button>\n       <DisplayLove data ={this.state.result}/>\n      </View>\n    )\n  }\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}